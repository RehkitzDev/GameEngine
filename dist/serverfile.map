{"version":3,"sources":["core\\AssetFactory.ts","core\\GameObjectManager.ts","core\\REngine.ts","core\\networking\\RWebSocketHost.ts","server\\networking\\WebSocketServer.ts","server\\RServer.ts","core\\networking\\BasicHandler.ts","server\\networking\\Handler.ts","serverfile.ts"],"names":[],"mappings":"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","file":"serverfile.map","sourceRoot":"..\\src","sourcesContent":["import { AssetsManager, Scene, AbstractMesh, Mesh, InstancedMesh } from \"babylonjs\";\r\n\r\nexport class AssetFactory{\r\n\r\n\r\n    private meshAssets: Map<string,AbstractMesh>;\r\n\r\n    public constructor(scene: Scene){\r\n        \r\n        this.meshAssets = new Map<string,AbstractMesh>();\r\n        this.init(scene);\r\n    }\r\n\r\n    private init(scene: Scene){\r\n        scene.meshes.forEach((mesh: AbstractMesh) => {\r\n            if(!this.meshAssets.has(mesh.name))\r\n                this.meshAssets.set(mesh.name,mesh);\r\n        });\r\n    }\r\n\r\n    public CreateMeshInstance(objectName: string,meshAssetName: string): InstancedMesh | null{\r\n        if(this.meshAssets.has(meshAssetName)){\r\n            let mesh = (this.meshAssets.get(meshAssetName) as Mesh).createInstance(objectName);\r\n            mesh.setEnabled(true);\r\n            return mesh;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","import { NetGameObject } from \"./gameobject/NetGameObject\";\r\nimport { LinesMesh } from \"babylonjs\";\r\nimport { AssetFactory } from \"./AssetFactory\";\r\nimport { GameObject } from \"./gameobject/GameObject\";\r\nimport { ConnectedPlayer } from \"./networking/ConnectedPlayer\";\r\n\r\nexport class GameObjectManager{\r\n\r\n    protected assetFactory: AssetFactory;\r\n    protected gameObjects: Array<GameObject>;\r\n    protected networkedGameObjects: Map<number,NetGameObject>;\r\n    protected connectedPlayers: Map<number, ConnectedPlayer>;\r\n\r\n    constructor(assetFactory: AssetFactory){\r\n        this.assetFactory = assetFactory;\r\n        this.gameObjects = new Array<GameObject>();\r\n        this.networkedGameObjects = new Map<number,NetGameObject>();\r\n        this.connectedPlayers = new Map<number, ConnectedPlayer>();\r\n    }\r\n\r\n    public getFreePlayerId(): number{\r\n        for(let i=0; i < 65535; i++)\r\n            if(!this.connectedPlayers.has(i))\r\n                return i;\r\n        return -1;\r\n    }\r\n\r\n    public getFreeGameObjectId(): number{\r\n        for(let i=0; i < 65535; i++)\r\n            if(!this.networkedGameObjects.has(i))\r\n                return i;\r\n        return -1;\r\n    }\r\n\r\n    public addNetworkedGameObject(gameObject: NetGameObject){\r\n        if(!this.networkedGameObjects.has(gameObject.getId()))\r\n            this.networkedGameObjects.set(gameObject.getId(),gameObject);\r\n    }\r\n\r\n\r\n    public addOfflineGameObject(gameObject: GameObject){\r\n        this.gameObjects.push(gameObject);\r\n    }\r\n\r\n    public removeNetworkedGameObject(gameObject: NetGameObject){\r\n        if(this.networkedGameObjects.has(gameObject.getId())){\r\n            gameObject.getMesh().dispose();\r\n            this.networkedGameObjects.delete(gameObject.getId())\r\n        }\r\n    }\r\n\r\n    public removeGameObject(gameObject: GameObject){\r\n        gameObject.getMesh().dispose();\r\n        this.gameObjects = this.gameObjects.filter(g => g != gameObject);    \r\n    }\r\n\r\n    public update(deletaTime: number){\r\n        this.gameObjects.forEach((gameObject: GameObject) => {\r\n            gameObject.update(deletaTime);\r\n        });\r\n\r\n        this.networkedGameObjects.forEach((gameObject: GameObject, id: number) => {\r\n            gameObject.update(deletaTime);\r\n        });\r\n    }\r\n\r\n    public netWorkUpdate(deltaTime: number){\r\n        this.networkedGameObjects.forEach((gameObject: NetGameObject, id: number) => {\r\n            gameObject.networkedUpdate(deltaTime);\r\n        });\r\n    }\r\n}","import { Engine, Scene,AssetsManager, NullEngine, AbstractAssetTask } from \"babylonjs\";\r\nimport { AssetFactory } from \"./AssetFactory\";\r\nimport { GameObjectManager } from \"./GameObjectManager\";\r\nimport { RWebSocketHost } from \"./networking/RWebSocketHost\";\r\n\r\nexport class REngine{\r\n    \r\n    private babylonEngine: Engine;\r\n    private scene: Scene;\r\n\r\n    private assetManager: AssetsManager;\r\n    private gameObjectManager: GameObjectManager | null;\r\n    private assetFactory: AssetFactory | null;\r\n    private wsHost: RWebSocketHost;\r\n\r\n    private netWorkUpdateTime: number;\r\n    private netWorkCurrentUpdateTime: number;\r\n\r\n    constructor(babylonEngine: Engine,networkUpdateTime: number, wsHost: RWebSocketHost){\r\n        this.babylonEngine = babylonEngine;\r\n        this.wsHost = wsHost;\r\n\r\n        this.netWorkUpdateTime = 1 / networkUpdateTime;\r\n        this.netWorkCurrentUpdateTime = 0;\r\n\r\n        this.scene = new Scene(this.babylonEngine);\r\n        this.assetManager = new AssetsManager(this.scene);\r\n        this.assetFactory = null;\r\n        this.gameObjectManager = null;\r\n        this.assetManager.onFinish = (tasks: AbstractAssetTask[]) => {  this.init(); };\r\n    }\r\n\r\n    public getScene(): Scene{\r\n        return this.scene;\r\n    }\r\n\r\n    public getDeltaTime(): number{\r\n        return this.babylonEngine.getDeltaTime() / 1000;\r\n    }\r\n\r\n    public getAssetManager(): AssetsManager{\r\n        return this.assetManager;\r\n    }\r\n\r\n    public getAssetFactory(): AssetFactory{\r\n        return this.assetFactory!;\r\n    }\r\n\r\n    public getGameObjectManager(): GameObjectManager{\r\n        return this.gameObjectManager!;\r\n    }\r\n\r\n    public Update(deltaTime: number){\r\n        console.log(\"update\");\r\n        this.gameObjectManager!.update(deltaTime);\r\n\r\n        this.netWorkCurrentUpdateTime += deltaTime;\r\n        if(this.netWorkCurrentUpdateTime >= this.netWorkUpdateTime)\r\n            this.NetWorkUpdate(this.netWorkCurrentUpdateTime);\r\n    }\r\n\r\n    public NetWorkUpdate(deltaTime: number){\r\n        console.log(\"network update\");\r\n        this.gameObjectManager!.netWorkUpdate(deltaTime);\r\n        this.netWorkCurrentUpdateTime = 0;\r\n    }\r\n\r\n    private init(){\r\n        this.assetFactory = new AssetFactory(this.scene);\r\n        this.gameObjectManager = new GameObjectManager(this.assetFactory);\r\n        this.wsHost.connect(this.gameObjectManager);\r\n\r\n        this.scene.onBeforeRenderObservable.add(() => {\r\n            this.Update(this.getDeltaTime());\r\n        });\r\n\r\n        this.babylonEngine.runRenderLoop(() => { this.scene.render(); });\r\n    }\r\n\r\n    \r\n\r\n}","import { GameObjectManager } from \"../GameObjectManager\";\r\nimport { BasicHandler } from \"./BasicHandler\";\r\n\r\nexport abstract class RWebSocketHost{\r\n    \r\n    protected gameObjectManager: GameObjectManager | null;\r\n    protected handler: BasicHandler;\r\n\r\n    constructor(handler: BasicHandler){\r\n        this.handler = handler;\r\n        this.handler.init(this);\r\n        this.gameObjectManager = null;\r\n    }\r\n\r\n    protected abstract init(): void;\r\n\r\n    public connect(gameObjectManager: GameObjectManager){\r\n        this.gameObjectManager = gameObjectManager;\r\n        this.init();\r\n    }\r\n\r\n    public getGameObjectManager(): GameObjectManager{\r\n        return this.gameObjectManager!;\r\n    }\r\n\r\n}","import * as http from \"http\";\r\nimport * as ws from \"ws\";\r\nimport{ Packet, NetHandler, DataTypes } from \"nethandler\";\r\nimport { Server } from \"http\";\r\nimport { GameObjectManager } from \"../../core/GameObjectManager\";\r\nimport { RWebSocketHost } from \"../../core/networking/RWebSocketHost\";\r\nimport { Handler } from \"./Handler\";\r\n\r\n\r\n\r\nexport class WebSocketServer extends RWebSocketHost {\r\n    private wsServer: ws.Server | null;\r\n    private port: number;\r\n\r\n    constructor(port: number, handler: Handler){\r\n        super(handler);\r\n        this.wsServer = null;\r\n        this.port = port;\r\n    }\r\n\r\n    init(): void {\r\n        this.wsServer = new ws.Server({port: this.port});\r\n        this.wsServer.on(\"listening\", () => { console.log(\"websocket listening on port \"+ this.port); });\r\n        this.wsServer.addListener(\"connection\", this.onPlayerConnection); \r\n    }\r\n\r\n    private onPlayerConnection(ws: WebSocket){\r\n        console.log(\"websocket connection\");\r\n        console.log(ws);\r\n        //ws.addEventListener(\"message\")\r\n    }\r\n\r\n    private onPlayerMessage(){\r\n\r\n    }\r\n\r\n\r\n}","import { REngine } from \"../core/REngine\";\r\nimport { NullEngine } from \"babylonjs\";\r\nimport { WebSocketServer } from \"./networking/WebSocketServer\";\r\nimport { Handler } from \"./networking/Handler\";\r\n\r\nexport class RServer extends REngine{\r\n\r\n    constructor(port: number,networkUpdatesPerSecond:number, handler: Handler){\r\n        super(new NullEngine(),networkUpdatesPerSecond,new WebSocketServer(port, handler));\r\n        console.log(\"RServer Started\");\r\n    }\r\n\r\n}","import { NetHandler } from \"nethandler\"\r\nimport { GameObjectManager } from \"../GameObjectManager\";\r\nimport { RWebSocketHost } from \"./RWebSocketHost\";\r\n\r\nexport abstract class BasicHandler extends NetHandler{\r\n\r\n    protected webSocketHost: RWebSocketHost | null;\r\n\r\n    constructor(){\r\n        super();\r\n        this.webSocketHost = null;\r\n    }\r\n\r\n    public init(webSocketHost: RWebSocketHost){\r\n        this.webSocketHost = webSocketHost;\r\n    }\r\n\r\n}","import { NetHandler } from \"nethandler\";\r\nimport { BasicHandler } from \"../../core/networking/BasicHandler\";\r\nimport { WebSocketServer } from \"./WebSocketServer\";\r\n\r\nexport class Handler extends BasicHandler{\r\n\r\n    constructor(){\r\n        super();\r\n        this.OnConnect = this.OnConnection;\r\n    }\r\n\r\n    OnConnection(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { RServer } from \"./server/RServer\";\r\nimport { Handler } from \"./server/networking/Handler\";\r\nimport { HemisphericLight, Vector3, FreeCamera } from \"babylonjs\";\r\n\r\n\r\n\r\n\r\nlet rserver = new RServer(1337,30,new Handler());\r\nlet light = new HemisphericLight(\"HemiLight\",new Vector3(0,1,0),rserver.getScene());\r\nlet camera = new FreeCamera(\"FreeCamera\", new BABYLON.Vector3(0, -8, -20), rserver.getScene());\r\n\r\n\r\nrserver.getAssetManager().load();\r\n\r\n\r\n\r\n\r\n//README: \"parcel --target=node dist/serverfile.js\" BEI NODE ENV"]}